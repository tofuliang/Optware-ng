--- a/base/queues.py
+++ b/base/queues.py
@@ -128,7 +128,7 @@ def parseQueues(mode):
                     is_hp = True
 
             log.debug("Device URI: %s" % device_uri)
-            ppd_file = os.path.join('/etc/cups/ppd', printer_name + '.ppd')
+            ppd_file = os.path.join('%OPTWARE_TARGET_PREFIX%/etc/cups/ppd', printer_name + '.ppd')
             ppd_fileType = None
             PPDFileError = False
             if not os.path.exists(ppd_file):
--- a/base/services.py
+++ b/base/services.py
@@ -61,11 +61,11 @@ def running_as_root():
     return os.geteuid() == 0
 
 def restart_cups():
-    if os.path.exists('/etc/init.d/cups'):
-        return '/etc/init.d/cups restart'
+    if os.path.exists('%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd'):
+        return '%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd restart'
 
-    elif os.path.exists('/etc/init.d/cupsys'):
-        return '/etc/init.d/cupsys restart'
+    elif os.path.exists('%OPTWARE_TARGET_PREFIX%/etc/init.d/cupsys'):
+        return '%OPTWARE_TARGET_PREFIX%/etc/init.d/cupsys restart'
 
     else:
         return 'killall -HUP cupsd'
@@ -179,13 +179,13 @@ def start_service( service_name, passwordObj):
         else:
             log.error("Fail to start %s service, please start %s service manually."%(service_name,service_name))
 
-    elif os.path.exists('/etc/init.d/%s'%service_name):
-        cmd_status = passwordObj.getAuthCmd()%('/etc/init.d/%s status'%service_name)
+    elif os.path.exists('%OPTWARE_TARGET_PREFIX%/etc/init.d/%s'%service_name):
+        cmd_status = passwordObj.getAuthCmd()%('%OPTWARE_TARGET_PREFIX%/etc/init.d/%s status'%service_name)
         log.debug(cmd_status)
         sts,out = utils.run(cmd_status, passwordObj, "Need authentication to get %s service status"%service_name)
         if sts ==0:
             if 'stop' in out or 'inactive' in out:
-                cmd_start = passwordObj.getAuthCmd()%('/etc/init.d/%s start'%service_name)
+                cmd_start = passwordObj.getAuthCmd()%('%OPTWARE_TARGET_PREFIX%/etc/init.d/%s start'%service_name)
                 log.debug("cmd_start=%s"%cmd_start)
                 sts,out = utils.run(cmd_start, passwordObj, "Need authentication to start/restart %s service"%service_name)
                 if sts ==0:
--- a/base/utils.py
+++ b/base/utils.py
@@ -138,11 +138,11 @@ for s in EXPECT_WORD_LIST:
 def get_cups_systemgroup_list():
     lis = []
     try:
-        fp=open('/etc/cups/cupsd.conf')
+        fp=open('%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf')
     except IOError:
         try:
-            if "root" != grp.getgrgid(os.stat('/etc/cups/cupsd.conf').st_gid).gr_name:
-                return [grp.getgrgid(os.stat('/etc/cups/cupsd.conf').st_gid).gr_name]
+            if "root" != grp.getgrgid(os.stat('%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf').st_gid).gr_name:
+                return [grp.getgrgid(os.stat('%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf').st_gid).gr_name]
         except OSError:
             return lis
 
@@ -512,12 +512,10 @@ def which(command, return_full_path=False):
     if path_val:
         path = path_val.split(':')
 
-    path.append('/usr/bin')
-    path.append('/usr/local/bin')
-    # Add these paths for Fedora
-    path.append('/sbin')
-    path.append('/usr/sbin')
-    path.append('/usr/local/sbin')
+    path.append('%OPTWARE_TARGET_PREFIX%/bin')
+    path.append('%OPTWARE_TARGET_PREFIX%/sbin')
+    path.append('%OPTWARE_TARGET_PREFIX%/local/bin')
+    path.append('%OPTWARE_TARGET_PREFIX%/local/sbin')
 
     found_path = ''
     for p in path:
--- a/check.py
+++ b/check.py
@@ -139,9 +139,9 @@ def get_comment(package, Inst_status, installed_ver):
                 comment = "Python Programming is not supported if version is lessthan 2.2" 
     elif package == 'hpaio':
         if Inst_status == 'OK':
-            comment = "'hpaio found in /etc/sane.d/dll.conf'"
+            comment = "'hpaio found in %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf'"
         else:
-            comment = "'hpaio not found in /etc/sane.d/dll.conf. hpaio needs to be added in this file.'"
+            comment = "'hpaio not found in %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf. hpaio needs to be added in this file.'"
     elif package == 'cupsext' or package == 'pcardext' or package == 'hpmudext':
         if Inst_status != 'OK':
             comment = "'Not Found or Failed to load, Please reinstall HPLIP'"
@@ -326,9 +326,9 @@ class DependenciesCheck(object):
                 log.warn("HPLIP-Installation: Auto installation is not supported for %s distro  %s version " %(self.core.distro, self.core.distro_version))
 
             log.info()
-            log.info(log.bold("Current contents of '/etc/hp/hplip.conf' file:"))
+            log.info(log.bold("Current contents of '%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf' file:"))
             try:
-                output = open('/etc/hp/hplip.conf', 'r').read()
+                output = open('%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf', 'r').read()
             except (IOError, OSError) as e:
                 log.error("Could not access file: %s. Check HPLIP installation." % e.strerror)
                 self.num_errors += 1
@@ -502,7 +502,7 @@ class DependenciesCheck(object):
                         #log.info("Installed in HPLIP?: %s" % x)
                         log.info("Device URI: %s" % device_uri)
 
-                        ppd = os.path.join('/etc/cups/ppd', printer_name + '.ppd')
+                        ppd = os.path.join('%OPTWARE_TARGET_PREFIX%/etc/cups/ppd', printer_name + '.ppd')
 
                         if os.path.exists(ppd):
                             log.info("PPD: %s" % ppd)
@@ -690,7 +690,7 @@ class DependenciesCheck(object):
                                     else:
                                         log.info("%-15s %-30s %-15s %-8s %-8s %-8s %s"%("USB", printer_name, "Required","-","-","OK", "Node:'%s' Mode:'%s'"%(devnode,st_mode&0o777)))
 
-            # selinux_file = '/etc/selinux/config'
+            # selinux_file = '%OPTWARE_TARGET_PREFIX%/etc/selinux/config'
             # if os.path.exists(selinux_file):
             #     tui.header("SELINUX")
             #     try:
--- a/common/utils.c
+++ b/common/utils.c
@@ -311,7 +311,7 @@ int getHPLogLevel()
     char    *p;
     int iLogLevel = 0;
 
-    fp = fopen ("/etc/cups/cupsd.conf", "r");
+    fp = fopen ("%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf", "r");
     if (fp == NULL)
         return 0;
     while (!feof (fp))
--- a/hplip.list.in
+++ b/hplip.list.in
@@ -87,9 +87,9 @@ f 0755 root root $cupsfilter/hpcups hpcups
 %if hpps-install
 f 0755 root root $cupsfilter/hpps hpps
 %endif
-f 0644 root root /etc/hp/hplip.conf hplip.conf
-f 0644 root root /etc/cups/pstotiff.convs fax/filters/pstotiff.convs
-f 0644 root root /etc/cups/pstotiff.types fax/filters/pstotiff.types
+f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf hplip.conf
+f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/cups/pstotiff.convs fax/filters/pstotiff.convs
+f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/cups/pstotiff.types fax/filters/pstotiff.types
 f 0755 root root $cupsfilter/pstotiff fax/filters/pstotiff
 
 %if !print_only_exclude
@@ -155,14 +155,14 @@ f 0644 root root $ppd/HP prnt/pdf/*.ppd.gz
 @epm_scan@l 0755 root root $libdir/sane/libsane-hpaio.so.1 ${hpaio-version}
 @epm_scan@%system all
 @epm_scan@%postinstall <<EOF
-@epm_scan@if [ -f /etc/sane.d/dll.conf ]; then
-@epm_scan@   grep -q ^#hpaio /etc/sane.d/dll.conf
+@epm_scan@if [ -f %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf ]; then
+@epm_scan@   grep -q ^#hpaio %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf
 @epm_scan@   if [ $$? -eq 0 ]; then
-@epm_scan@      sed -i -e s/^#hpaio/hpaio/ /etc/sane.d/dll.conf
+@epm_scan@      sed -i -e s/^#hpaio/hpaio/ %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf
 @epm_scan@   else
-@epm_scan@      grep -q ^hpaio /etc/sane.d/dll.conf
+@epm_scan@      grep -q ^hpaio %OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf
 @epm_scan@      if [ $$? -ne 0 ]; then
-@epm_scan@	 echo hpaio >>/etc/sane.d/dll.conf
+@epm_scan@	 echo hpaio >>%OPTWARE_TARGET_PREFIX%/etc/sane.d/dll.conf
 @epm_scan@      fi
 @epm_scan@   fi
 @epm_scan@fi
@@ -371,17 +371,17 @@ f 0644 root root $ppd/HP prnt/pdf/*.ppd.gz
 
 # Use LINPUS8 for Acer Aspire One
 %if LINPUS8 RHEL5
-@epm_print_only_exclude@f 0644 root root /etc/udev/rules.d/56-hpmud_sysfs.rules data/rules/56-hpmud_sysfs.rules
+@epm_print_only_exclude@f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud_sysfs.rules data/rules/56-hpmud_sysfs.rules
 %endif
 
 %if RHEL3
-f 0755 root root /etc/hotplug/usb/hpmud data/rules/hpmud
-l 0644 root root /usr/share/cups/model/foomatic-ppds $ppd/HP
+f 0755 root root %OPTWARE_TARGET_PREFIX%/etc/hotplug/usb/hpmud data/rules/hpmud
+l 0644 root root %OPTWARE_TARGET_PREFIX%/share/cups/model/foomatic-ppds $ppd/HP
 @epm_print_only_exclude@%postinstall <<EOF
-@epm_print_only_exclude@if [ -f /etc/hotplug/usb.usermap ]; then
-@epm_print_only_exclude@   grep -q ^hpmud /etc/hotplug/usb.usermap
+@epm_print_only_exclude@if [ -f %OPTWARE_TARGET_PREFIX%/etc/hotplug/usb.usermap ]; then
+@epm_print_only_exclude@   grep -q ^hpmud %OPTWARE_TARGET_PREFIX%/etc/hotplug/usb.usermap
 @epm_print_only_exclude@   if [ $$? -ne 0 ]; then
-@epm_print_only_exclude@     echo "hpmud 0x0001 0x03f0 0x0000 0x0000 0x0000 0x00 0x00 0x00 0x00 0x00 0x00 0x00000000" >>/etc/hotplug/usb.usermap
+@epm_print_only_exclude@     echo "hpmud 0x0001 0x03f0 0x0000 0x0000 0x0000 0x00 0x00 0x00 0x00 0x00 0x00 0x00000000" >>%OPTWARE_TARGET_PREFIX%/etc/hotplug/usb.usermap
 @epm_print_only_exclude@   fi
 @epm_print_only_exclude@fi
 @epm_print_only_exclude@EOF
@@ -389,8 +389,8 @@ l 0644 root root /usr/share/cups/model/foomatic-ppds $ppd/HP
 
 %system !darwin
 %if !LINPUS8 !RHEL3 !UBUNTU804 !SUSE9 !RHEL5
-@epm_print_only_exclude@f 0644 root root /etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
-@epm_print_only_exclude@f 0644 root root /usr/share/hal/fdi/preprobe/10osvendor/20-hplip-devices.fdi data/rules/20-hplip-devices.fdi
+@epm_print_only_exclude@f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
+@epm_print_only_exclude@f 0644 root root %OPTWARE_TARGET_PREFIX%/share/hal/fdi/preprobe/10osvendor/20-hplip-devices.fdi data/rules/20-hplip-devices.fdi
 %endif
 %system all
 
@@ -427,7 +427,7 @@ EOF
 @epm_full@%replaces hplip-data
 @epm_full@f 0644 root root /usr/share/hal/fdi/preprobe/10osvendor/20-hplip-devices.fdi data/rules/20-hplip-devices.fdi
 @epm_full@%postinstall <<EOF
-@epm_full@install -m 644 data/rules/56-hpmud.rules /etc/udev/rules.d
+@epm_full@install -m 644 data/rules/56-hpmud.rules %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d
 @epm_full@EOF
 %endif
 
@@ -438,7 +438,7 @@ EOF
 @epm_lite@%replaces hplip-data
 @epm_lite@f 0644 root root /usr/share/hal/fdi/preprobe/10osvendor/20-hplip-devices.fdi data/rules/20-hplip-devices.fdi
 @epm_lite@%postinstall <<EOF
-@epm_lite@install -m 644 data/rules/56-hpmud.rules /etc/udev/rules.d
+@epm_lite@install -m 644 data/rules/56-hpmud.rules %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d
 @epm_lite@EOF
 %endif
 
@@ -461,7 +461,7 @@ EOF
 @epm_full@%replaces hplip-data
 @epm_full@%replaces hplip-gui
 @epm_full@%postinstall <<EOF
-@epm_full@sed -i -e s/GROUP=\"lp\"/GROUP=\"scanner\"/ /etc/udev/rules.d/56-hpmud.rules
+@epm_full@sed -i -e s/GROUP=\"lp\"/GROUP=\"scanner\"/ %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud.rules
 @epm_full@EOF
 %endif
 
@@ -481,7 +481,7 @@ EOF
 @epm_lite@%replaces hplip
 @epm_lite@%replaces hplip-data
 @epm_lite@%postinstall <<EOF
-@epm_lite@sed -i -e s/GROUP=\"lp\"/GROUP=\"scanner\"/ /etc/udev/rules.d/56-hpmud.rules
+@epm_lite@sed -i -e s/GROUP=\"lp\"/GROUP=\"scanner\"/ %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud.rules
 @epm_lite@EOF
 %endif
 
@@ -495,7 +495,7 @@ EOF
 
 # Use LINPUS8 for Acer Aspire One
 %if LINPUS8 RHEL5
-@epm_class_driver@f 0644 root root /etc/udev/rules.d/56-hpmud_sysfs.rules data/rules/56-hpmud_sysfs.rules
+@epm_class_driver@f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud_sysfs.rules data/rules/56-hpmud_sysfs.rules
 %endif
 
 %if PLUGIN
@@ -543,10 +543,10 @@ f 0644 root root $docdir/copyright copyright
 d 0755 root root /var/lib/hp/ -
 
 %system !darwin
-@epm_print_only_exclude@f 0644 root root /etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
+@epm_print_only_exclude@f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
 
 %system !darwin
-@epm_class_driver@f 0644 root root /etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
+@epm_class_driver@f 0644 root root %OPTWARE_TARGET_PREFIX%/etc/udev/rules.d/56-hpmud.rules data/rules/56-hpmud.rules
 
 %system all
 %endif
--- a/logcapture.py
+++ b/logcapture.py
@@ -37,12 +37,12 @@ from base.sixext import to_string_utf8
 from subprocess import Popen, PIPE
 from installer.core_install import *
 
-CUPS_FILE='/etc/cups/cupsd.conf'
-CUPS_BACKUP_FILE='/etc/cups/cupsd.conf_orginal'
+CUPS_FILE='%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf'
+CUPS_BACKUP_FILE='%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf_orginal'
 LOG_FOLDER_PATH='./'
 LOG_FOLDER_NAME='hplip_troubleshoot_logs'
 LOG_FILES=LOG_FOLDER_PATH + LOG_FOLDER_NAME
-TMP_DIR = "/var/spool/cups/tmp"
+TMP_DIR = "%OPTWARE_TARGET_PREFIX%/var/spool/cups/tmp"
 USER_NAME =""
 USERS={}
 ################ is_journal() function ##############
@@ -86,8 +86,8 @@ def enable_log():
            cmd = os.path.join(utils.which('service'), 'service')+" cups restart"
         elif utils.which('systemctl'):
            cmd = os.path.join(utils.which('systemctl'), 'systemctl')+" restart %s.service"%service_name
-        elif os.path.exists('/etc/init.d/cups'):
-           cmd = "/etc/init.d/cups restart"
+        elif os.path.exists('%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd'):
+           cmd = "%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd restart"
         else:
            log.error("service command not found.. Please restart cups manually..")
 
@@ -122,8 +122,8 @@ def restore_loglevels():
        cmd = os.path.join(utils.which('service'), 'service')+" cups restart"
     elif utils.which('systemctl'):
        cmd = os.path.join(utils.which('systemctl'), 'systemctl')+" restart %s.service"%service_name
-    elif os.path.exists('/etc/init.d/cups'):
-       cmd = "/etc/init.d/cups restart"
+    elif os.path.exists('%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd'):
+       cmd = "%OPTWARE_TARGET_PREFIX%/etc/init.d/S88cupsd restart"
     else:
        log.error("service command not found.. Please restart cups manually..")
 
--- a/prnt/cups.py
+++ b/prnt/cups.py
@@ -191,7 +191,7 @@ def isfamilydrv(ppds):
      #   for m in models.FAMILY_CLASSES:
       #       if m in f:
        #          family_check=1
-    filename_config = "/etc/hp/hplip.conf"
+    filename_config = "%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf"
     file_conf = open(filename_config,'r')
     for line in file_conf:
         if 'class-driver' in line:
@@ -203,8 +203,8 @@ def isfamilydrv(ppds):
                 
 def getPPDPath(addtional_paths=None):
     """
-        Returns the CUPS ppd path (not the foomatic one under /usr/share/ppd).
-        Usually this is /usr/share/cups/model.
+        Returns the CUPS ppd path (not the foomatic one under %OPTWARE_TARGET_PREFIX%/share/ppd).
+        Usually this is /share/cups/model.
     """
     if addtional_paths is None:
         addtional_paths = []
@@ -219,16 +219,16 @@ def getPPDPath(addtional_paths=None):
 
 def getAllowableMIMETypes():
     """
-        Scan all /etc/cups/*.convs and /usr/share/cups/mime
+        Scan all %OPTWARE_TARGET_PREFIX%/etc/cups/*.convs and %OPTWARE_TARGET_PREFIX%/share/cups/mime
         files for allowable file formats.
     """
     paths = []
     allowable_mime_types = []
     files = []
-    if os.path.exists("/etc/cups"):
-        paths.append("/etc/cups/*.convs")
-    if os.path.exists("/usr/share/cups/mime"):
-        paths.append("/usr/share/cups/mime/*.convs")
+    if os.path.exists("%OPTWARE_TARGET_PREFIX%/etc/cups"):
+        paths.append("%OPTWARE_TARGET_PREFIX%/etc/cups/*.convs")
+    if os.path.exists("%OPTWARE_TARGET_PREFIX%/share/cups/mime"):
+        paths.append("%OPTWARE_TARGET_PREFIX%/share/cups/mime/*.convs")
     for path in paths:
         files.extend(glob.glob(path))
     for f in files:
@@ -289,11 +289,11 @@ def getSystemPPDs():
     else: # 1.2.x
         log.debug("(CUPS 1.2.x) Getting list of PPDs using CUPS_GET_PPDS...")
         ppd_dict = cupsext.getPPDList()
-        cups_ppd_path = getPPDPath() # usually /usr/share/cups/model
-        foomatic_ppd_path = sys_conf.get('dirs', 'ppdbase', '/usr/share/ppd')
+        cups_ppd_path = getPPDPath() # usually %OPTWARE_TARGET_PREFIX%/share/cups/model
+        foomatic_ppd_path = sys_conf.get('dirs', 'ppdbase', '%OPTWARE_TARGET_PREFIX%/share/ppd')
 
         if not foomatic_ppd_path or not os.path.exists(foomatic_ppd_path):
-            foomatic_ppd_path = '/usr/share/ppd'
+            foomatic_ppd_path = '%OPTWARE_TARGET_PREFIX%/share/ppd'
 
         log.debug("CUPS PPD base path = %s" % cups_ppd_path)
         log.debug("Foomatic PPD base path = %s" % foomatic_ppd_path)
@@ -312,8 +312,8 @@ def getSystemPPDs():
                         'gutenprint' in ppd):
 
                     # PPD files returned by CUPS_GET_PPDS (and by lpinfo -m)
-                    # can be relative to /usr/share/ppd/ or to
-                    # /usr/share/cups/model/. Not sure why this is.
+                    # can be relative to %OPTWARE_TARGET_PREFIX%/share/ppd/ or to
+                    # %OPTWARE_TARGET_PREFIX%/share/cups/model/. Not sure why this is.
                     # Here we will try both and see which one it is...
 
                     if os.path.exists(ppd):
@@ -651,7 +651,7 @@ def getFaxPPDFile(mq, model):
 
 
 def getErrorLogLevel():
-    cups_conf = '/etc/cups/cupsd.conf'
+    cups_conf = '%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf'
     try:
         f = open(cups_conf, 'r')
     except OSError:
--- a/prnt/hpijs/foomatic-rip-hplip
+++ b/prnt/hpijs/foomatic-rip-hplip
@@ -1,4 +1,4 @@
-#!/usr/bin/perl
+#!%OPTWARE_TARGET_PREFIX%/bin/perl
 # The above Perl path may vary on your system; fix it!!! -*- perl -*-
 
 use strict;
@@ -18,9 +18,9 @@ my $ripversion='$Revision=3.0.2.131$';
 # found when called from the command line (for spooler-less printing),
 # link it to spooler-specific directories when you use CUPS or PPR:
 
-#    ln -s /usr/bin/foomatic-rip /usr/lib/cups/filter/
-#    ln -s /usr/bin/foomatic-rip /usr/lib/ppr/lib/
-#    ln -s /usr/bin/foomatic-rip /usr/lib/ppr/interfaces/
+#    ln -s %OPTWARE_TARGET_PREFIX%/bin/foomatic-rip %OPTWARE_TARGET_PREFIX%/lib/cups/filter/
+#    ln -s %OPTWARE_TARGET_PREFIX%/bin/foomatic-rip %OPTWARE_TARGET_PREFIX%/lib/ppr/lib/
+#    ln -s %OPTWARE_TARGET_PREFIX%/bin/foomatic-rip %OPTWARE_TARGET_PREFIX%/lib/ppr/interfaces/
 
 # Mark this filter world-readable and world-executable (note that most
 # spoolers run the print filters as a special user, as "lp", not as
@@ -44,19 +44,19 @@ my $ripversion='$Revision=3.0.2.131$';
 # possibly other stuff.	 The default path is often fine on Linux, but
 # may not be on other systems.
 #
-my $execpath = "/usr/bin:/usr/local/bin:/usr/bin:/bin";
+my $execpath = "%OPTWARE_TARGET_PREFIX%/bin:%OPTWARE_TARGET_PREFIX%/local/bin:/usr/bin:/bin";
 
 # CUPS raster drivers are searched here
-my $cupsfilterpath = "/usr/lib/cups/filter:/usr/local/lib/cups/filter:/usr/local/libexec/cups/filter:/opt/cups/filter:/usr/lib/cups/filter";
+my $cupsfilterpath = "%OPTWARE_TARGET_PREFIX%/lib/cups/filter:%OPTWARE_TARGET_PREFIX%/local/lib/cups/filter:%OPTWARE_TARGET_PREFIX%/local/libexec/cups/filter:%OPTWARE_TARGET_PREFIX%/cups/filter";
 
 # Location of the configuration file "filter.conf", this file can be
 # used to change the settings of foomatic-rip without editing
 # foomatic-rip. itself. This variable must contain the full pathname 
 # of the directory which contains the configuration file, usually
-# "/etc/foomatic".
+# "%OPTWARE_TARGET_PREFIX%/etc/foomatic".
 # Some versions of configure do not fully expand $sysconfdir
-my $prefix = "/usr";
-my $configpath = "/etc/foomatic";
+my $prefix = "%OPTWARE_TARGET_PREFIX%";
+my $configpath = "%OPTWARE_TARGET_PREFIX%/etc/foomatic";
 
 # For the stuff below, the settings in the configuration file have priority.
 
@@ -66,7 +66,7 @@ my $accounting_prolog = "";
 
 # Enter here your personal command for converting non-postscript files
 # (especially text) to PostScript. If you leave it blank, at first the
-# line "textfilter: ..." from /etc/foomatic/filter.conf is read and
+# line "textfilter: ..." from %OPTWARE_TARGET_PREFIX%/etc/foomatic/filter.conf is read and
 # then the commands given on the list below are tried, beginning with
 # the first one.
 # You can set this to "a2ps", "enscript" or "mpage" to select one of the 
@@ -97,7 +97,7 @@ my $modern_shell = '';
 # Set debug to 1 to enable the debug logfile for this filter; it will
 # appear as defined by $logfile. It will contain status from this
 # filter, plus the renderer's stderr output. You can also add a line
-# "debug: 1" to your /etc/foomatic/filter.conf to get all your
+# "debug: 1" to your %OPTWARE_TARGET_PREFIX%/etc/foomatic/filter.conf to get all your
 # Foomatic filters into debug mode.
 #
 # WARNING: This logfile is a security hole; do not use in production.
@@ -106,7 +106,7 @@ my $debug = 0;
 # This is the location of the debug logfile (and also the copy of the
 # processed PostScript data) in case you have enabled debugging above.
 # The logfile will get the extension ".log", the PostScript data ".ps".
-my $logfile = "/tmp/foomatic-rip";
+my $logfile = "%OPTWARE_TARGET_PREFIX%/tmp/foomatic-rip";
 
 # End interesting enduser options
 
@@ -761,7 +761,7 @@ my( $cups_jobid, $cups_user, $cups_jobtitle, $cups_copies, $cups_options,
     $cups_filename );
 if ($spooler eq 'cups') {
 
-    # Use CUPS font path ("FontPath" in /etc/cups/cupsd.conf)
+    # Use CUPS font path ("FontPath" in %OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf)
     if ($ENV{'CUPS_FONTPATH'}) {
 	$ENV{'GS_LIB'} = $ENV{'CUPS_FONTPATH'} .
 	    ($ENV{'GS_LIB'} ? ":$ENV{'GS_LIB'}" : "");
@@ -1013,23 +1013,23 @@ if (($spooler eq 'direct') || ($spooler eq 'cps') || ($spooler eq 'pdq')) {
 	    $ppdfile = $printer;
 	# CPS can have the PPD in the spool directory
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/spool/lpd/${printer}/${printer}.ppd")) {
-	    $ppdfile = "/var/spool/lpd/${printer}/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/spool/lpd/${printer}/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/spool/lpd/${printer}/${printer}.ppd";
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/local/spool/lpd/${printer}/${printer}.ppd")) {
-	    $ppdfile = "/var/local/spool/lpd/${printer}/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/local/spool/lpd/${printer}/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/local/spool/lpd/${printer}/${printer}.ppd";
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/local/lpd/${printer}/${printer}.ppd")) {
-	    $ppdfile = "/var/local/lpd/${printer}/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/local/lpd/${printer}/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/local/lpd/${printer}/${printer}.ppd";
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/spool/lpd/${printer}.ppd")) {
-	    $ppdfile = "/var/spool/lpd/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/spool/lpd/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/spool/lpd/${printer}.ppd";
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/local/spool/lpd/${printer}.ppd")) {
-	    $ppdfile = "/var/local/spool/lpd/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/local/spool/lpd/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/local/spool/lpd/${printer}.ppd";
 	} elsif (($spooler eq 'cps') &&
-		 (-r "/var/local/lpd/${printer}.ppd")) {
-	    $ppdfile = "/var/local/lpd/${printer}.ppd";
+		 (-r "%OPTWARE_TARGET_PREFIX%/var/local/lpd/${printer}.ppd")) {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/var/local/lpd/${printer}.ppd";
 	} elsif (-r "${printer}.ppd") { # current dir
 	    $ppdfile = "${printer}.ppd";
 	} elsif (-r "$user_default_path/${printer}.ppd") { # user dir
@@ -1038,14 +1038,14 @@ if (($spooler eq 'direct') || ($spooler eq 'cps') || ($spooler eq 'pdq')) {
 	    $ppdfile = "$configpath/direct/${printer}.ppd";
 	} elsif (-r "$configpath/${printer}.ppd") { # system dir
 	    $ppdfile = "$configpath/${printer}.ppd";
-	} elsif (-r "/etc/cups/ppd/${printer}.ppd") { # CUPS config dir
-	    $ppdfile = "/etc/cups/ppd/${printer}.ppd";
-	} elsif (-r "/usr/local/etc/cups/ppd/${printer}.ppd") {
-	    $ppdfile = "/usr/local/etc/cups/ppd/${printer}.ppd";
-	} elsif (-r "/usr/share/ppr/PPDFiles/${printer}.ppd") { # PPR PPDs
-	    $ppdfile = "/usr/share/ppr/PPDFiles/${printer}.ppd";
-	} elsif (-r "/usr/local/share/ppr/PPDFiles/${printer}.ppd") {
-	    $ppdfile = "/usr/local/share/ppr/PPDFiles/${printer}.ppd";
+	} elsif (-r "%OPTWARE_TARGET_PREFIX%/etc/cups/ppd/${printer}.ppd") { # CUPS config dir
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/etc/cups/ppd/${printer}.ppd";
+	} elsif (-r "%OPTWARE_TARGET_PREFIX%/local/etc/cups/ppd/${printer}.ppd") {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/local/etc/cups/ppd/${printer}.ppd";
+	} elsif (-r "%OPTWARE_TARGET_PREFIX%/share/ppr/PPDFiles/${printer}.ppd") { # PPR PPDs
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/share/ppr/PPDFiles/${printer}.ppd";
+	} elsif (-r "%OPTWARE_TARGET_PREFIX%/local/share/ppr/PPDFiles/${printer}.ppd") {
+	    $ppdfile = "%OPTWARE_TARGET_PREFIX%/local/share/ppr/PPDFiles/${printer}.ppd";
 	} else {
 	    rip_die ("There is no readable PPD file for the printer " .
 		     "$printer, is it configured?",
--- a/prnt/hpps/hppsfilter.c
+++ b/prnt/hpps/hppsfilter.c
@@ -45,7 +45,7 @@ static void get_LogLevel ()
     FILE    *fp;
     char    str[258];
     char    *p;
-    fp = fopen ("/etc/cups/cupsd.conf", "r");
+    fp = fopen ("%OPTWARE_TARGET_PREFIX%/etc/cups/cupsd.conf", "r");
     if (fp == NULL)
         return;
     while (!feof (fp))
--- a/base/codes.py
+++ b/base/codes.py
@@ -335,7 +335,7 @@ EVENT_RAISE_DEVICE_MANAGER = 9001
 #EVENT_JOB_STORAGE_UI_REQUEST = 9002 # sent by hplipjs CUPS filter for job storage UI
 EVENT_HISTORY_UPDATE = 9003 # sent by hp-systray to hp-toolbox when a device's history changes
 EVENT_USER_CONFIGURATION_CHANGED = 9004 # sent when ~/.hplip/hplip.conf has been changed by another app.
-EVENT_SYS_CONFIGURATION_CHANGED = 9005 # sent when /etc/hp/hplip.conf has been changed by another app.
+EVENT_SYS_CONFIGURATION_CHANGED = 9005 # sent when %OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf has been changed by another app.
 EVENT_DEVICE_UPDATE_REQUESTED = 9010
 EVENT_DEVICE_UPDATE_REPLY = 9011
 EVENT_DEVICE_START_POLLING = 9020
--- a/base/g.py
+++ b/base/g.py
@@ -143,7 +143,7 @@ class ConfigBase(object):
     def write(self):
         if self.filename is not None:
             filename = self.filename
-            if filename.startswith("/root/") or filename.startswith("/etc/"):
+            if filename.startswith("/root/") or filename.startswith("%OPTWARE_TARGET_PREFIX%/etc/"):
                 # Don't try writing a file in root's home directory or
                 # the system-wide config file.
                 # See bug #479178.
@@ -182,16 +182,16 @@ class ConfigBase(object):
         
 class SysConfig(ConfigBase):
     def __init__(self):
-        ConfigBase.__init__(self, '/etc/hp/hplip.conf')
+        ConfigBase.__init__(self, '%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf')
 
 
 class State(ConfigBase):
     def __init__(self):
-        if not os.path.exists('/var/lib/hp/') and os.geteuid() == 0:
-            os.makedirs('/var/lib/hp/')
-            cmd = 'chmod 755 /var/lib/hp/'
+        if not os.path.exists('%OPTWARE_TARGET_PREFIX%/var/lib/hp/') and os.geteuid() == 0:
+            os.makedirs('%OPTWARE_TARGET_PREFIX%/var/lib/hp/')
+            cmd = 'chmod 755 %OPTWARE_TARGET_PREFIX%/var/lib/hp/'
             os_utils.execute(cmd)
-        ConfigBase.__init__(self, '/var/lib/hp/hplip.state')
+        ConfigBase.__init__(self, '%OPTWARE_TARGET_PREFIX%/var/lib/hp/hplip.state')
 
 
 class UserConfig(ConfigBase):
@@ -283,7 +283,7 @@ prop.max_message_len = 8192
 prop.max_message_read = 65536
 prop.read_timeout = 90
 
-prop.ppd_search_path = '/usr/share;/usr/local/share;/usr/lib;/usr/local/lib;/usr/libexec;/opt;/usr/lib64'
+prop.ppd_search_path = '%OPTWARE_TARGET_PREFIX%/share;%OPTWARE_TARGET_PREFIX%/local/share;%OPTWARE_TARGET_PREFIX%/lib;%OPTWARE_TARGET_PREFIX%/local/lib;%OPTWARE_TARGET_PREFIX%/libexec;%OPTWARE_TARGET_PREFIX%/lib64'
 prop.ppd_search_pattern = 'HP-*.ppd.*'
 prop.ppd_download_url = 'http://www.linuxprinting.org/ppd-o-matic.cgi'
 prop.ppd_file_suffix = '-hpijs.ppd'
@@ -343,7 +343,7 @@ def check_extension_module_env(ext_mod):
     else :
         python_ver = 2
 
-    for dirpath, dirname, filenames in os.walk('/usr/lib/'):    #find the .so path
+    for dirpath, dirname, filenames in os.walk('%OPTWARE_TARGET_PREFIX%/lib/'):    #find the .so path
         if ext_mod_so in filenames:
             ext_path = dirpath
             flag = 1
--- a/ui4/devmgr5.py
+++ b/ui4/devmgr5.py
@@ -1023,7 +1023,7 @@ class DevMgr5(QMainWindow,  Ui_MainWindow):
                     return
 
                 hplip_conf = configparser.ConfigParser()
-                fp = open("/etc/hp/hplip.conf", "r")
+                fp = open("%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf", "r")
                 hplip_conf.readfp(fp)
                 fp.close()
 
--- a/ui5/devmgr5.py
+++ b/ui5/devmgr5.py
@@ -1068,7 +1068,7 @@ class DevMgr5(Ui_MainWindow_Derived, Ui_MainWindow, QMainWindow):
                     return
 
                 hplip_conf = configparser.ConfigParser()
-                fp = open("/etc/hp/hplip.conf", "r")
+                fp = open("%OPTWARE_TARGET_PREFIX%/etc/hp/hplip.conf", "r")
                 hplip_conf.readfp(fp)
                 fp.close()
 
-- 
2.7.4

